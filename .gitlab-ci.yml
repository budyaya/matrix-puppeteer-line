build:
  stage: build
  image: docker:latest
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  - if [ $CI_COMMIT_BRANCH == "master" ]; then docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest && docker push $CI_REGISTRY_IMAGE:latest; fi
  - if [ $CI_COMMIT_BRANCH != "master" ]; then docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME; fi

build puppeteer:
  stage: build
  image: docker:latest
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - cd puppet
  - docker pull $CI_REGISTRY_IMAGE/puppeteer:latest || true
  - docker build --pull --cache-from $CI_REGISTRY_IMAGE/puppeteer:latest --tag $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_SHA .
  - docker push $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_SHA
  - if [ $CI_COMMIT_BRANCH == "master" ]; then docker tag $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/puppeteer:latest && docker push $CI_REGISTRY_IMAGE/puppeteer:latest; fi
  - if [ $CI_COMMIT_BRANCH != "master" ]; then docker tag $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_REF_NAME && docker push $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_REF_NAME; fi
